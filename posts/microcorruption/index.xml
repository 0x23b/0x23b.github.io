<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microcorruption on 0x23B&#39;s blog</title>
    <link>https://meem67.github.io/blog/posts/microcorruption/</link>
    <description>Recent content in Microcorruption on 0x23B&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 13 Jan 2018 19:58:40 +0100</lastBuildDate>
    
	<atom:link href="https://meem67.github.io/blog/posts/microcorruption/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Orleans</title>
      <link>https://meem67.github.io/blog/posts/microcorruption/new_orleans/</link>
      <pubDate>Wed, 22 Mar 2017 11:48:00 +0100</pubDate>
      
      <guid>https://meem67.github.io/blog/posts/microcorruption/new_orleans/</guid>
      <description>New Orleans In the &amp;lsquo;main&amp;rsquo;-method we can see, that &amp;lsquo;check_password&amp;rsquo; is called. Jumping into this method shows, that r13 - which is our input - is checked against address 0x2400:
44bc &amp;lt;check_password&amp;gt;44bc: 0e43 clr	r1444be: 0d4f mov	r15, r1344c0: 0d5e add	r14, r1344c2: ee9d 0024 cmp.b	@r13, 0x2400(r14)44c6: 0520 jne	#0x44d2 &amp;lt;check_password+0x16&amp;gt;44c8: 1e53 inc	r1444ca: 3e92 cmp	#0x8, r1444cc: f823 jne	#0x44be &amp;lt;check_password+0x2&amp;gt;44ce: 1f43 mov	#0x1, r1544d0: 3041 ret44d2: 0f43 clr	r1544d4: 3041 ret When looking at this address, we can directly see the password: 2400: 3952 647c 6f29 5600 0000 0000 0000 0000 9Rd|o)V.</description>
    </item>
    
    <item>
      <title>Sydney</title>
      <link>https://meem67.github.io/blog/posts/microcorruption/sydney/</link>
      <pubDate>Wed, 22 Mar 2017 11:48:00 +0100</pubDate>
      
      <guid>https://meem67.github.io/blog/posts/microcorruption/sydney/</guid>
      <description>Sydney Here we have four &amp;lsquo;cmp&amp;rsquo; instructions on two bytes of r15, respectively incrementing the offset by two each time. The first &amp;lsquo;cmp&amp;rsquo; checks, whether the first two bytes are 0x466a, the next two #0x6158 and so on. 448a &amp;lt;check_password&amp;gt;448a: bf90 6a46 0000 cmp	#0x466a, 0x0(r15)4490: 0d20 jnz	$+0x1c4492: bf90 5861 0200 cmp	#0x6158, 0x2(r15)4498: 0920 jnz	$+0x14449a: bf90 6741 0400 cmp	#0x4167, 0x4(r15)44a0: 0520 jne	#0x44ac &amp;lt;check_password+0x22&amp;gt;44a2: 1e43 mov	#0x1, r1444a4: bf90 6363 0600 cmp	#0x6363, 0x6(r15)44aa: 0124 jeq	#0x44ae &amp;lt;check_password+0x24&amp;gt;44ac: 0e43 clr	r1444ae: 0f4e mov	r14, r1544b0: 3041 ret</description>
    </item>
    
  </channel>
</rss>