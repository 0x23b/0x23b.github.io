<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writeups on 0x23b&#39;s blog</title>
    <link>https://0x23b.github.io/tags/writeups/</link>
    <description>Recent content in Writeups on 0x23b&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 09 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://0x23b.github.io/tags/writeups/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Symfonos: 2 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-08-09-vulnhub_symfonos_2_writeup/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-08-09-vulnhub_symfonos_2_writeup/</guid>
      <description>Symfonos: 2 - Writeup Summary This was an awesome and fun machine - absolutely OSCP like! Like in the 1st version, we have to login anonymously to SMB in order to read a log file, which includes a username. After bruteforcing the password of that user, we can login via ssh. While on the system, we find out, that a webserver is running locally, which we have to access remotely via port forwarding.</description>
    </item>
    
    <item>
      <title>Symfonos: 1 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-08-08-vulnhub_symfonos1_writeup/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-08-08-vulnhub_symfonos1_writeup/</guid>
      <description>Symfonos: 1 - Writeup Summary A great OSCP-like machine! It requires anonymous authentication on SMB, which leads to a hint. With that hint, a directory can be found on the web server, that leads to a Wordpress blog. This blog has several plugins installed, where two of them lead to local file inclusion. With log injection, the LFI turns into a remote code execution and system access is granted. Privilege escalation is done via an SUID bit enabled binary, that calls curl within.</description>
    </item>
    
    <item>
      <title>Matrix: 3 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-08-06-vulnhub_matrix_3_writeup/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-08-06-vulnhub_matrix_3_writeup/</guid>
      <description>Matrix: 3 - Writeup Summary This is the 3rd machine of the Matrix series, which I really enjoyed. Although it should be pretty straight forward, it took me quite a while, to finish this machine. First, we have to find credentials running through several directories on a web server. With those credentials, we can access another web server and download an executable, that includes username and password. With those credentials, we can access the system through ssh.</description>
    </item>
    
    <item>
      <title>Matrix: 2 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-07-30-vulnhub_matrix_2_writeup/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-07-30-vulnhub_matrix_2_writeup/</guid>
      <description>Matrix: 2 - Writeup Summary This box has several port open, which almost all needs to be exploited in order to get root user. First we have to use directory traversal on a web server to get user names, which we can use to login through ShellInABox. Once on the system, we can find and crack the credentials of another user, which can be used to authenticate on another web server.</description>
    </item>
    
    <item>
      <title>Raven: 2 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-02-27-vulnhub_raven_2_writeup/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-02-27-vulnhub_raven_2_writeup/</guid>
      <description>Raven: 2 - Writeup Summary Very similar to Raven: 1, as I discovered all vulnerabilities also with the previous machine, but went for the low hanging fruits. This time I had to take the harder part with exploiting PHP Mailer to have remote code execution. While on the machine, I saw that the MySQL database is still running as root. I was also able to use user defined functions, which gave me root.</description>
    </item>
    
    <item>
      <title>Raven: 1 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-02-26-vulnhub_raven_1_writeup/</link>
      <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-02-26-vulnhub_raven_1_writeup/</guid>
      <description>Raven: 1 - Writeup Summary This machine was well constructed and straight forward, therefore I really enjoyed it. After finding wordpress on the web server, it can be enumerated in order to find out valid usernames. The usernames can then be used to bruteforce the password for the ssh login. While on the machine, we can find mysql credentials in the wordpress config file. Inside the database, we can find the password hash for the other user, which can be cracked within seconds.</description>
    </item>
    
    <item>
      <title>Matrix: 1 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2019-02-25-vulnhub_matrix_1_writeup/</link>
      <pubDate>Mon, 25 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2019-02-25-vulnhub_matrix_1_writeup/</guid>
      <description>Matrix: 1 - Writeup Summary I am a big Matrix fan and hoped to have funny hours with this machine, as this machine was labelled with intermediate difficulty. Unfortunately, it took me about 30 minutes to read root.txt. Anyhow, in the end I enjoyed the machine. We are given 3 open ports, whereas two of them are web servers. On one of the web servers we can see a comment in base64, pointing us to a file, which is encoded in Brainfuck.</description>
    </item>
    
    <item>
      <title>Ypuffy - Writeup</title>
      <link>https://0x23b.github.io/posts/hackthebox/2019-02-09-htb_ypuffy_writeup/</link>
      <pubDate>Sat, 09 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2019-02-09-htb_ypuffy_writeup/</guid>
      <description>Ypuffy - Writeup    OS Difficulty Points Release IP     OpenBSD Medium 30 15 Sep 2018 10.10.10.107    Summary Interesting machine, which leaks username and a smbhash over ldap. This smbhash is used to logon via smbclient, to obtain a private key in ppk format. After this is converted to OpenSSL format, we can login to the system. For privilege escalation, we can use the OpenBSD equivalent for sudo, which allows us to use ssh-keygen.</description>
    </item>
    
    <item>
      <title>Dab - Writeup</title>
      <link>https://0x23b.github.io/posts/hackthebox/2019-02-02-htb_dab_writeup/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2019-02-02-htb_dab_writeup/</guid>
      <description>Dab - Writeup    OS Difficulty Points Release IP     Linux Hard 40 18 Aug 2018 10.10.10.86    Summary Writeup not finished yet</description>
    </item>
    
    <item>
      <title>SecNotes - Writeup</title>
      <link>https://0x23b.github.io/posts/hackthebox/2019-01-19-htb_secnotes_writeup/</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2019-01-19-htb_secnotes_writeup/</guid>
      <description>SecNotes - Writeup    OS Difficulty Points Release IP     Windows Medium 30 25 Aug 2018 10.10.10.97    Summary A medium machine which I solved the unintended way with a second order SQL injection vulnerability to get a initial foothold. This gives us credentials for the SMB share. There we can upload nc.exe and a php reverse shell. While on the box, we encounter a Windows Subsystem for Linux, which has .</description>
    </item>
    
    <item>
      <title>Mischief - Writeup</title>
      <link>https://0x23b.github.io/posts/hackthebox/2019-01-05-htb-mischief-writeup/</link>
      <pubDate>Sat, 05 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2019-01-05-htb-mischief-writeup/</guid>
      <description>Mischief - Writeup    OS Difficulty Points Release IP     Linux Insane 50 07 Jul 2018 10.10.10.92    Summary The first 50 points machine I was able to solve on HackTheBox! First we find login credentials for a web server over SNMP. This gives us another pair of credentials. We have to use IPv6 in order to get a new login page, where we have to guess/fuzz the username, as we already have the correct password, but the user is not matching.</description>
    </item>
    
    <item>
      <title>Mr. Robot - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2018-12-31-vulnhub_mrrobot_1_writeup/</link>
      <pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2018-12-31-vulnhub_mrrobot_1_writeup/</guid>
      <description>Mr. Robot - Writeup Summary For initial foothold, I had to get access to Wordpress as admin user and edit the php file of a plugin in order to get a reverse shell. For root user, there was an old nmap with suid bit, which allowed executing commands in interactive mode.
Netdiscover First, find out the IP address of the victim machine. Therefore Iâ€™am using netdiscover:
Currently scanning: 192.168.66.0/16 | Screen View: Unique Hosts 3 Captured ARP Req/Rep packets, from 3 hosts.</description>
    </item>
    
    <item>
      <title>HTB Valentine - Write Up</title>
      <link>https://0x23b.github.io/posts/hackthebox/2018-07-29-htb_valentine_writeup/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2018-07-29-htb_valentine_writeup/</guid>
      <description>Valentine - Writeup    OS Difficulty Points Release IP     Linux Easy 20 17 Feb 2018 10.10.10.79    Summary Nmap root@kali:~/HTB/Valentine# nmap -sC -sV 10.10.10.79 -oA nmap Starting Nmap 7.70 ( https://nmap.org ) at 2018-05-10 17:07 EDT Nmap scan report for 10.10.10.79 Host is up (0.042s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 5.9p1 Debian 5ubuntu1.</description>
    </item>
    
    <item>
      <title>Kioptrix 4 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2018-07-19-vulnhub_kioptrix_4_writeup/</link>
      <pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2018-07-19-vulnhub_kioptrix_4_writeup/</guid>
      <description>Kioptrix 4 - Writeup Summary In order to have a foothold into this machine, I had to use SQL injection. This allowed me to gather logon credentials over ssh. After logging in over ssh, I landed in a restricted shell, which was easily escaped with os.system. I discovered, that MySQL is running as root, which also allowed us to execute system commands through MySQL User Defined Functions.
Netdiscover First of all, lets find the ip address of the vulnerable machine:</description>
    </item>
    
    <item>
      <title>Kioptrix 3 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2018-07-18-vulnhub_kioptrix_3_writeup/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2018-07-18-vulnhub_kioptrix_3_writeup/</guid>
      <description>Kioptrix 3 - Writeup Summary An easy machine, which can be exploited with a remote code execution vulnerability. While on the machine, we can gather logon credentials from the database, which can be used for ssh login. Privilege escalation can be done with executing a command with sudo.
Netdiscover First of all, lets find the ip address of the vulnerable machine:
root@kali:~# netdiscover Currently scanning: 192.168.60.0/16 | Screen View: Unique Hosts 3 Captured ARP Req/Rep packets, from 3 hosts.</description>
    </item>
    
    <item>
      <title>Kioptrix 2 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2018-07-17-vulnhub_kioptrix_2_writeup/</link>
      <pubDate>Tue, 17 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2018-07-17-vulnhub_kioptrix_2_writeup/</guid>
      <description>Kioptrix 2 - Writeup Summary Easy machine, which is vulnerable to SQL injection, that gives the possibility to get a reverse shell. While on the machine, we can execute a kernel exploit, that gives us root privileges.
Netdiscover root@kali:~# netdiscover Currently scanning: 192.168.81.0/16 | Screen View: Unique Hosts 4 Captured ARP Req/Rep packets, from 3 hosts. Total size: 240 _____________________________________________________________________________ IP At MAC Address Count Len MAC Vendor / Hostname ----------------------------------------------------------------------------- 192.</description>
    </item>
    
    <item>
      <title>Kioptrix 1 - Writeup</title>
      <link>https://0x23b.github.io/posts/vulnhub/2018-07-16-vulnhub_kioptrix_1_writeup/</link>
      <pubDate>Mon, 16 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/vulnhub/2018-07-16-vulnhub_kioptrix_1_writeup/</guid>
      <description>Kioptrix 1 - Writeup Summary Very easy machine which is vulnerable to remote code exeuction on samba. Maybe there are different ways too, but I haven&amp;rsquo;t tried out right now.
Netdiscover root@kali:~# netdiscover Currently scanning: 192.168.116.0/16 | Screen View: Unique Hosts 6 Captured ARP Req/Rep packets, from 4 hosts. Total size: 360 _____________________________________________________________________________ IP At MAC Address Count Len MAC Vendor / Hostname ----------------------------------------------------------------------------- 192.168.56.1 0a:00:27:00:00:04 1 60 Unknown vendor 192.</description>
    </item>
    
    <item>
      <title>HTB Chatterbox - Write Up</title>
      <link>https://0x23b.github.io/posts/hackthebox/2018-06-16-htb_chatterbox_writeup/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2018-06-16-htb_chatterbox_writeup/</guid>
      <description>IP: 10.10.10.74 OS: Windows
Nmap As my standard nmap run did not find any open ports, I ran a full scan:
Standard ports:
root@kali:~/HTB/Chatterbox# nmap -sC -sC -oA nmap 10.10.10.74 # Nmap 7.70 scan initiated Sun May 13 08:22:39 2018 as: nmap -sC -sC -oA nmap 10.10.10.74 Nmap scan report for 10.10.10.74 Host is up (0.024s latency). All 1000 scanned ports on 10.10.10.74 are filtered # Nmap done at Sun May 13 08:23:05 2018 -- 1 IP address (1 host up) scanned in 26.</description>
    </item>
    
    <item>
      <title>HTB Blocky - Write Up</title>
      <link>https://0x23b.github.io/posts/hackthebox/2017-12-09-htb_blocky_writeup/</link>
      <pubDate>Sat, 09 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://0x23b.github.io/posts/hackthebox/2017-12-09-htb_blocky_writeup/</guid>
      <description>IP: 10.10.10.37 OS: Linux
Nmap root@kali:~/HTB/Blocky# nmap -sC -sV -oA nmap 10.10.10.37 Starting Nmap 7.40 ( https://nmap.org ) at 2017â€“12â€“04 21:15 EST Nmap scan report for 10.10.10.37 Host is up (0.15s latency). Not shown: 996 filtered ports PORT STATE SERVICE VERSION 21/tcp open ftp ProFTPD 1.3.5a 22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.2 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 d6:2b:99:b4:d5:e7:53:ce:2b:fc:b5:d7:9d:79:fb:a2 (RSA) |_ 256 5d:7f:38:95:70:c9:be:ac:67:a0:1e:86:e7:97:84:03 (ECDSA) 80/tcp open http Apache httpd 2.</description>
    </item>
    
  </channel>
</rss>